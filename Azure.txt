Types of Scaling in Kubernetes

-> Horizontal scaling/Horizontal Pod Autoscaler (HPA): This feature can effortlessly add or release pod replicas automatically.
-> Vertical scaling/Vertical Pod Autoscaler (VPA): This feature in which CPU and memory reservations adjust automatically.
-> Cluster Autoscaler: In this feature an analysis of resources occurs, and we make essential adjustments in the deployment and handle the load.(similar to horizontal scaling)

Non-functional requirements:

Non-functional requirements in software engineering refer to the characteristics of a software system that are not related to specific functionality or behavior. They describe how the system should perform, rather than what it should do. 

Examples of NFR:
-> Availability, scalability, performance, agility, security, consistency, reliability, durability

Strategy is a long term plan while tactics are the short term plan to achieve a certain outcome

Region: A geographical area where Azure data centers are located.

Availability Zone: A physically separate location within a region with its own power, cooling, and networking, ensuring high availability.

Deployment Models: Ways to deliver applications or services — like public, private, hybrid, or multi-cloud models.

Public Cloud: Services are hosted on a shared cloud platform  and accessed over the internet by multiple users.

Private Cloud: Cloud infrastructure is used exclusively by one organization, offering more control, privacy, and security.

Hybrid Cloud: A combination of public and private clouds, allowing data and apps to move between them for flexibility.

VNet (Virtual Network): A private, isolated network in Azure for securely connecting resources like VMs.

Bastion Host: A secure gateway server used to access Azure VMs through the browser without exposing public IPs.

Availability Set: A grouping of VMs across fault and update domains to ensure high availability during outages or maintenance.

Scale Set: A group of identical VMs that automatically scale in or out based on demand for performance and cost-efficiency.

Day-2:

I created three Virtual Machines in Azure: Frontend, Backend, and Private, along with a Virtual Network (VNet).

Note: If you don’t manually create a Network Security Group (NSG), Azure automatically creates one during VM provisioning.

 Network and Subnet Configuration
After creating the VMs, I proceeded with configuring the VNet and Subnets.

 Network Security Group (NSG) Configuration
Since Azure had created default NSGs for each VM, I dissociated them and created a new custom NSG, which I then manually associated with the respective VMs.

 Access Requirements and Configuration
Frontend VM

This VM is intended for public access (e.g., users accessing a website).

During VM creation, I enabled a public IP address.

I added an inbound rule in NSG to allow SSH access (port 22).

Backend VM

This is a private VM, used for internal application communication only.

I did not assign a public IP during creation.

Only internal traffic from the Frontend VM should be able to access it.

I created an inbound rule in NSG to allow traffic only from the Frontend VM's private IP.

I also added a deny rule for all other sources to prevent public access.

Private VM

Although it has a public IP, I do not want it to be accessed externally.

I added an NSG rule to deny all public access, ensuring it's used for internal tasks only.

⚠ Importance of NSG Priority
While configuring NSG rules, I ensured that priority values were set correctly.

Remember: Lower numbers = higher priority.
For example:

The rule allowing backend access from frontend has a lower priority number (e.g., 100).

The deny rule has a higher priority number (e.g., 200), so it’s applied only after the allow rule.

This setup ensures that:

Frontend VM is publicly accessible for users.

Backend VM is only accessible by the Frontend.

Private VM is isolated and accessible only internally.


Day-3:


- Entra id
- 

Tenant (Entra ID)
│
├── Subscription A
│   ├── Resource Group 1
│   │   ├── VM
│   │   └── Storage
│   └── Resource Group 2
│       └── SQL Database
│
├── Subscription B
│   └── Resource Group 3
│       └── App Service
│ 
└── Users & Groups (in Entra ID)
└── Can access resources in any subscription/resource group

- in the microsoft azure the entra id is used to create the users and groups and give them roles and access them. in subscription we create the resourse groups.and the users we created in the entra id we will use it in the subscription and assign the roles how to control the resources..not to create the users and privaleges in the entra id only.
- 
- Cost management
- vnet peering
- users&roles

Day-4:

## Azure Automation Account

An Azure Automation Account is a container for your automation resources, including runbooks, jobs, and configurations. It provides a way to automate and orchestrate tasks across Azure and non-Azure environments.

## Scope in Azure

Scope defines the boundary of access and permissions in Azure. It can be set at different levels: Management Groups, Subscriptions, Resource Groups, or individual Resources. This hierarchical structure helps in organizing and managing access control effectively.

## Microsoft Entra ID (formerly Azure AD)

Microsoft Entra ID is Azure's cloud-based identity and access management service. It helps manage user access to Azure resources and applications, providing features like:

- Single sign-on (SSO) authentication
- Multi-factor authentication
- Role-based access control (RBAC)
- Identity protection and security

When working with Automation Accounts, Entra ID is crucial for:

- Managing authentication and authorization
- Setting up managed identities for secure access to Azure resources
- Configuring RBAC permissions for automation workloads
