Doubts:
1. vms vs kubernetes vms when we have to use what?
2. how the application is deployed in the vm, how the user is accessing teh application in vm like all the websites how they are hosting 
3. capstone project
4. how the webite is building from basic in the azuredevops
5. how the vm is used for the azure devops for the website hosting
6. from basic to advance in azure devops ,review the capstone project
7.bastion host
8. types of artifacts
9.azure basics and terrafrom revise and azuredevops comparing with the normal devops tools and how it works inernally compared to normal devops tools
service plan &
10.application insights
quality gates and release gates and sonar cube  
service plan
scrum  from basic when and where it will use
service plans and app services
github actions
*****

Great question! Let’s break it down clearly and practically — especially in the Azure DevOps context — so you not only know what CI/CD pipelines are but how and where they fit into your DevOps lifecycle.

🚀 What is a CI Pipeline in Azure DevOps?
CI = Continuous Integration

It means:

Developers frequently push code to the repo (like GitHub or Azure Repos)

Azure DevOps automatically builds the code, runs unit tests, lints, and packages it

🔄 What happens in a CI Pipeline?
Code pushed → triggers the pipeline

Code is built (e.g., dotnet build, npm build, mvn install)

Tests run (e.g., Jest, JUnit, NUnit)

Optionally, code is packaged or published (like ZIP file, .jar, .dll)

🛠️ Example:
yaml
Copy
Edit
trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
📦 Output: Build artifacts (like Web.zip) that are passed to the CD pipeline.

🚀 What is a CD Pipeline in Azure DevOps?
CD = Continuous Delivery or Continuous Deployment

It means:

Once the build is ready, it gets automatically deployed to environments like:

Dev

Test

Staging

Production

🔄 What happens in a CD Pipeline?
CI build finishes and publishes an artifact

CD pipeline takes the artifact

Deploys it to Azure App Service, VMs, AKS, or Function Apps

(Optional) Performs config changes, database migrations, approval gates, and monitoring alerts

🔗 CI/CD in Azure DevOps (Full Flow)
text
Copy
Edit
[Developer Pushes Code]
        ↓
[CI Pipeline]
  - Build app
  - Run tests
  - Publish artifact
        ↓
[CD Pipeline]
  - Take artifact
  - Deploy to Dev (auto)
  - Deploy to Prod (after approval)
🎯 In Azure DevOps, CI & CD Pipelines Live In:
CI → Under Pipelines > Pipelines (YAML or Classic)

CD → Under Pipelines > Releases (Classic UI based or YAML with Environments)

🤝 Example:
🔹 You have a .NET Web App

CI Pipeline

Runs when you push code

Builds and tests the app

Produces Web.zip as an artifact

CD Pipeline

Picks up Web.zip

Deploys to Azure App Service (Dev first, then Prod)

Uses approval gates for production

🔥 Real-World Mapping
Concept	Azure DevOps Component
Build and test code	CI Pipeline
Deploy app	CD Pipeline
Release definition	Release pipeline (classic)
Approvals & gates	Pre/Post-deployment conditions
Artifacts	Shared between CI and CD

If you want, I can also show you:

Visual flowchart of a CI/CD pipeline in Azure DevOps

Sample project with both YAML CI and CD pipelines

How to link build → release → app service in real setup

Just let me know what you want to explore deeper 👇
